import java.awt.Button;
import java.awt.FlowLayout;
import java.awt.Label;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.swing.JFrame;

public class IncludeFrame {
  JFrame frame;
  String title="标题";
  
  TextArea editIp;
  TextArea editPort;
  TextArea textArea;
  TextField edit;
  TextField editOldPath;
  TextField editNewPath;
  
  public static void main(String[] args) throws IOException {
	  
	  final IncludeFrame clientFrame=new IncludeFrame();
	  clientFrame.init("socketClient");
	  
	  JFrame clientJfram=clientFrame.addMyView();
	  clientFrame.initIpPort("10.1.12.55", "8080","发1d发");
	  clientJfram.setVisible(true);
	  
	  
	  
	  
  }
  
	public IncludeFrame(){
		this.frame=new JFrame();
	}
  //Arguments标签下的VM arguments:-Dfile.encoding=GB18030
  public void init(String title){
		frame.setLayout(new FlowLayout());
		//设置标题
		frame.setTitle(title);
	    //设置大小可更改
	    frame.setResizable( true );
	    //设置大小
	    frame.setSize(300,100);
	    //设置大小及窗口顶点位置
	    frame.setBounds(10,10,500,700);
	    //显示窗口
	    frame.setVisible(true);	  
	    
	    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    
	}
  //初始化一些测试数据
  public void initIpPort(String ip,String port,String text){
	  String dataNew="<script src=\"../../resources/js/base/default.js\" type=\"text/javascript\"></script>";
	  editIp.setText(dataNew);
	  dataNew+="\n";
	  dataNew+="<script src=\"../../resources/js/base/unload.js\" type=\"text/javascript\"></script>";
	  editPort.setText(dataNew);
	  //editOldPath.setText("d://about.html");
	  //editNewPath.setText("d://about2.html");
	  editOldPath.setText("C:\\Users\\saofang\\Desktop\\mobile_erp\\update");
	  editNewPath.setText("C:\\Users\\saofang\\Desktop\\mobile_erp\\update");
  }
  public JFrame addMyView(){
      Label labelIP=new Label("old-data:");//IP
	  frame.add(labelIP);
	  editIp=new TextArea("");
	  editIp.setSize(450, 3);
      frame.add(editIp);
      Label labelPort=new Label("new-data:");//port
	  frame.add(labelPort);
	  editPort=new TextArea("");
	  editPort.setSize(450, 100);
      frame.add(editPort);
      
      Label labelOldPath=new Label("old-path:");//old path
	  frame.add(labelOldPath);
	  editOldPath=new TextField("",20);
      frame.add(editOldPath);
      Label labelNewPath=new Label("new-path:");//new path
	  frame.add(labelNewPath);
	  editNewPath=new TextField("",20);
      frame.add(editNewPath);
      
      //添加相关的按钮:连接,关闭
      Button connect = new Button("replace");  
      connect.addActionListener(new ActionListener(){
    	  @Override
    	  public void actionPerformed(ActionEvent e) {
    		  String dataOld=editIp.getText();
    		  String dataNew=editPort.getText();
    		  String pathOld=editOldPath.getText();
    		  String pathNew=editNewPath.getText();
    		  IncludeKit include=new IncludeKit();
    		  int state=include.replaceInclude(pathOld, pathNew, dataOld, dataNew);
    		  if(state==1){
    			  System.out.println("success成功");
    		  }else{
    			  System.out.println("fail失败");
    		  }
    	  }
      });
      frame.add(connect);
      
      Button close = new Button("closeNO");//关闭  
      close.addActionListener(new ActionListener(){
    	  @Override
    	  public void actionPerformed(ActionEvent e) {
    		  
    	  }
      });
      frame.add(close);
      
      
      
      //显示数据
      textArea=new TextArea("");
      textArea.setSize(450, 100);
      textArea.setEditable(false);
      frame.add(textArea);
      
      return frame;
  }
  

}
